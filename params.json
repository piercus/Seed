{"google":"UA-36483881-1","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Elegant inheritance, attributes and events, both for client-side and server-side JavaScript.","body":"# Seed.js \r\nElegant inheritance, attributes and events, both for client-side and server-side JavaScript.\r\n\r\n## Introduction\r\n\r\nSeed.js is a part of the fjs project.\r\nSeed.js is an abstract JavaScript Constructor, that would fullfill the following requirements :\r\n\r\n*   **inheritance**, `Seed.extend` and the `\"+method\"` convention help you inherit fast and easily, see [Extend with Seed.js](Seed/blob/master/Extendable.md)\r\n*   **attributes**, with easy and flexible `options` keyword, see [Manage attributes with 'options'](Seed/blob/master/options.md)\r\n*   **events** and **subscriptions**, to avoid object persistance due to dirty event subscriptions see [Use events](Seed/blob/master/Events.md)\r\n*   **sub**, build a sub object of a parent one see [What is it sub ?](Seed/blob/master/Events.md)\r\n\r\n## Installation\r\n\r\n### With NPM\r\n\r\n    $ npm install seed-js\r\n\r\nin your script add\r\n\r\n    require(\"Seed\");\r\n\r\n### Client-side\r\n\r\n    <script src=\"path/to/Seed.merged.js\">\r\nor\r\n\r\n    <script src=\"path/to/Seed.min.js\">\r\n\r\n## Basic Usage\r\nYou can use sandjs synhtax to write both client and server-side code.\r\nsee [sandjs](http://github.com/fjs/sandjs) for more informations on sand.js.\r\n\r\n    var S = sand.require(\"Seed/Seed\", function(r){\r\n      var S = r.Seed;\r\n      /* code */\r\n    });\r\n\r\nsee [How to require Seed.js](Seed/blob/master/How-to-require-Seed.md) for more ways to require Seed.js\r\n\r\n### Extend your own Constructors \r\n\r\n    var Fruit = S.extend({\r\n      options : {\r\n        // by default the fruit is Tasty\r\n        isTasty : true,\r\n        //and no one owns it\r\n        owner : null\r\n      },\r\n      \r\n      // i like to taste any fruit\r\n      taste : function() {\r\n        console.log(\"I like to taste a fruit\");\r\n      },\r\n      \r\n      dump : function() {\r\n        return {\r\n          objectType :  \"a fruit\"\r\n        }\r\n      }\r\n    });\r\n    \r\n    var Banana = Fruit.extend({\r\n      // by default the banana is owned by a banana eater and is yellow\r\n      \"+options\" : {\r\n        owner : \"banana eater\",\r\n        color : \"yellow\"\r\n      },\r\n      \r\n      // but the taste of the banana depends if it tasty\r\n      \"+taste\" : function() {\r\n        console.log(this.isTasty ? \"GREAT!\" : \"beurk!\");\r\n      },\r\n      \r\n      \"+dump\" : function() {\r\n        return {\r\n          color : this.color\r\n        }\r\n      }\r\n    });\r\n    \r\n### Instanciate them\r\n    var oldBanana = new Banana({\r\n      isTasty : false,\r\n      color : \"black\",\r\n      owner : \"me\"\r\n    });\r\n    \r\n    // options are set as attributes in the instance\r\n    oldBanana.isTasty \r\n    //=> false\r\n    \r\n    // +taste in Banana is executed after taste in Fruit\r\n    oldBanana.taste();\r\n    // I like to test fruits\r\n    // beurk!\r\n    \r\n    var favoriteBanana = new r.Banana();\r\n    \r\n    favoriteBanana.taste(); \r\n    // I like to test fruits\r\n    // GREAT!\r\n    \r\n    favoriteBanana.dump();\r\n    //=> { color : \"yellow\", objectType : \"a fruit\"}\r\n\r\n  \r\n## More infos/usages\r\n\r\nSeed.js is a package of 4 little Tools :\r\n*    **Extendable**, (in Seed/Extendable), extend objects protoypes gracefully with +/- convention see [Extend with Seed.js](Seed/blob/master/Extendable.md)\r\n*    **Eventable**, (in Seed/Eventable), fire and subscribe event properly, see [Use events](Seed/blob/master/Eventable.md)\r\n*    **options**, (in Seed/Seed), elegant attributes set. see [Manage attributes with 'options'](Seed/blob/master/options.md)\r\n*    **sub**, (in Seed/Seed), elegant attributes set [What is sub ?](Seed/blob/master/sub.md)\r\n\r\n## Tests\r\n\r\nrun tests\r\n\r\n    npm test\r\n\r\ntest uses sandcli and run on server-side with vowsjs\r\n[sandcli](http://github.com/piercus/sandcli) provides a test command\r\n\r\n## Documentation\r\n\r\nBy now documentation is inside the code and uses JSDoc synthax.\r\n\r\n## Contribute\r\n\r\nAdd an issue if you find bugs or please\r\n\r\n*   Fork me\r\n*   Add your tests\r\n*   Make your contribution\r\n*   Pass all the tests \r\n*   Add a pull request\r\n\r\n\r\n\r\n","name":"Seed"}